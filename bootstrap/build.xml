<project name="Build for Riena" default="runall">

	<!-- adjust these if you use another eclipse version -->
	<property name="launcherVer" value="1.1.0.v20100307"/>
	<property name="pdeBuildVer" value="3.6.0.v20100311-1400"/>
	<property name="sdkVer" value="3.6M6"/>
    <property name="pluginDir" value="${basedir}/tools/eclipse.sdk/eclipse/plugins"/>

	<target name="clean">
		<delete dir="config"/>
		<delete dir="config.rap"/>
		<delete dir="tmp/org.eclipse.riena"/>
		<cvs
       cvsRoot=":ext:rienaBuild@build.eclipse.org:/cvsroot/rt"
       cvsRsh="ssh"
			 package="org.eclipse.riena/org.eclipse.riena.build3"
		   dest="tmp"
       failonerror="true"/>
		<copy todir="config">
			<fileset dir="tmp/org.eclipse.riena/org.eclipse.riena.build3/config"/>
		</copy>
		<copy todir="config.rap">
			<fileset dir="tmp/org.eclipse.riena/org.eclipse.riena.build3/config.rap"/>
		</copy>
	</target>
	
	<target name="prepareBuild">
		<available
			property="has.SDK"
			file="tools/eclipse.sdk/eclipse"/>
		<antcall target="prepareSDK"/>
	</target>
	
	<target name="prepareSDK" unless="has.SDK">
		<unzip
			dest="tools/eclipse.sdk">
			<fileset dir="tools/eclipse.sdk">
				<include name="eclipse-SDK-*-win32.zip"/>
			</fileset>
		</unzip>
	</target>
	
	<target name="build" depends="prepareBuild">
		<delete dir="tmp/build"/>
		<java 
			taskname="build"
			jar="${pluginDir}/org.eclipse.equinox.launcher_${launcherVer}.jar"
			fork="true"
			failonerror="true">
			<arg value="-application"/>
			<arg value="org.eclipse.ant.core.antRunner"/>
		    <arg value="-buildfile"/>
		    <arg value="${pluginDir}/org.eclipse.pde.build_${pdeBuildVer}/scripts/build.xml"/>
		    <arg value="-Dbuilder=${basedir}/config"/>
            <arg value="-DFETCHTAG_PARM=${FETCHTAG_PARM}"/>
		</java>
	</target>
	
	<target name="buildrap" depends="prepareBuild">
			<delete dir="tmp/build"/>
			<java 
				taskname="build"
				jar="${pluginDir}/org.eclipse.equinox.launcher_${launcherVer}.jar"
				fork="true"
				failonerror="true">
				<arg value="-application"/>
				<arg value="org.eclipse.ant.core.antRunner"/>
			    <arg value="-buildfile"/>
			    <arg value="${pluginDir}/org.eclipse.pde.build_${pdeBuildVer}/scripts/build.xml"/>
			    <arg value="-Dbuilder=${basedir}/config"/>
	            <arg value="-DFETCHTAG_PARM=${FETCHTAG_PARM}"/>
			</java>
		</target>	
	
	<target name="runtests">
		<delete dir="tmp/tests"/>
		<ant antfile="config/runtests.xml" target="run"/>
	</target>

	<target name="beforesign">
		<!-- repack output -->
		<delete dir="${basedir}/tmp/build/N.TestBuild/repack"/>
		<mkdir dir="${basedir}/tmp/build/N.TestBuild/repack"/>
		<java 
				taskname="metadata"
				jar="${pluginDir}/org.eclipse.equinox.launcher_${launcherVer}.jar"
				fork="true"
				failonerror="true">
				<arg value="-application"/>
				<arg value="org.eclipse.update.core.siteOptimizer"/>
	      		<arg line="-jarProcessor -processAll -repack -outputDir ${basedir}/tmp/build/N.TestBuild/repack" />
    	  		<arg line="${basedir}/tmp/build/N.TestBuild/Riena-p2repo-*.zip" />
		</java>
		<copy todir="${basedir}/tmp/build/N.TestBuild">
		    <fileset dir="${basedir}/tmp/build/N.TestBuild/repack"/>
		</copy>
		<delete dir="${basedir}/tmp/build/N.TestBuild/repack"/>	
	</target>
	
	<target name="aftersign">
		
		<echo>Creating pack200 files</echo>
		<mkdir dir="${basedir}/signed/pack200"/>
		<java 
				taskname="pack"
				jar="${pluginDir}/org.eclipse.equinox.launcher_${launcherVer}.jar"
				fork="true"
				failonerror="true">
				<arg value="-application"/>
				<arg value="org.eclipse.update.core.siteOptimizer"/>
	      		<arg line="-jarProcessor -processAll -pack -outputDir ${basedir}/signed/pack200" />
    	  		<arg line="${basedir}/signed/Riena-p2repo-*.zip" />
		</java>
		
		<echo>Unzip repo for generating metadata</echo>
		<unzip dest="${basedir}/signed/unzip">
			<fileset dir="${basedir}/signed/pack200/">
			        <include name="*.zip"/>
			    </fileset>
		</unzip>
		
		<echo>Delete metadata</echo>
		<delete>
		    <fileset dir="${basedir}/signed/unzip" includes="*.jar,*.xml"/>
		</delete>

		<echo>Generate new metadata</echo>
		<java 
 				taskname="metadata"
				jar="${pluginDir}/org.eclipse.equinox.launcher_${launcherVer}.jar"
				fork="true"
				failonerror="true">
				<arg value="-application"/>
				<arg value="org.eclipse.equinox.p2.metadata.generator.EclipseGenerator"/>
				<arg value="-updateSite"/>
				<arg value="${basedir}/signed/unzip"/>
				<arg value="-metadataRepository"/>
				<arg value="file:${basedir}/signed/unzip"/>
				<arg value="-metadataRepositoryName"/>
				<arg value="Riena Update Site"/>
				<arg value="-artifactsRepository"/>
				<arg value="file:${basedir}/signed/unzip"/>
				<arg value="-artifactsRepositoryName"/>
				<arg value="Helios Artifacts"/>
				<arg value="-publishArtifacts"/>
				<arg value="-publishArtifactRepository"/>
				<arg value="-compress"/>
				<arg value="-append"/>
				<arg value="-noDefaultiUs"/>
				<arg value="-reusePack200Files"/>
		</java>

		<echo>Delete pack200 dir</echo>
		<delete dir="${basedir}/signed/pack200"/>
	
	</target>	

	<target name="runtests.dev">
		<!-- todo ev remove -->
		<ant antfile="config/runtests.xml" target="run"/>
	</target>
	
	<target name="runall" depends="build, runtests">
	</target>
</project>
